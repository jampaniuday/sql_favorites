<?xml version="1.0" encoding="UTF-8" ?>
<displays>
<display id="2e70ad15-014c-1000-8001-0ab08003f980" type="" style="Table" enable="true">
	<name><![CDATA[sessions_11g]]></name>
	<description><![CDATA[]]></description>
	<tooltip><![CDATA[]]></tooltip>
	<drillclass><![CDATA[null]]></drillclass>
	<CustomValues>
		<TYPE>horizontal</TYPE>
	</CustomValues>
	<query>
		<sql><![CDATA[with slo as (select sid, sql_id, serial#, target, opname, time_remaining, sql_exec_id, inst_id from gv$session_longops sl where time_remaining > 0)
select /* rule */
     to_char(floor(s.last_call_et/3600/24),'fm9999')||'d:'||
      to_char(floor(mod(s.last_call_et,86400)/3600),'fm00')||':'||
       to_char(floor(mod(s.last_call_et,3600)/60),'fm00')||':'||
       to_char(mod(mod(s.last_call_et,3600),60),'fm00') "Idle"
,    to_char(floor(s.seconds_in_wait/3600),'fm9000')||':'||
       to_char(floor(mod(s.seconds_in_wait,3600)/60),'fm00')||':'||
       to_char(mod(mod(s.seconds_in_wait,3600),60),'fm00') "Wait"
--,    rpad(substr(s.username,1,21),21) "User"
,    s.username
,    substr(case when substr(s.program,-1) = ')'
            then
               case when substr(s.program,-6,1) = '('
                    then substr(s.program,-6) ||' '||s.module
                    else substr(s.program,1, instr(s.program,'(',-1)-1) --substr(s.program,1,7)
               end
            else nvl(substr(s.program,instr(s.program,'/',-1)+1), substr(s.module,instr(s.module,'/',-1)+1,15)  )
            end
           ,1,16) "program/mod"
,    case s.state when 'WAITING' then substr(s.event,1,31)
                else case s.status when 'INACTIVE' then substr(s.event,1,31)
                                                   else 'on cpu/runqueue'
                end
     end event
--,    s.event event2
--,    case
--          when s.wait_time = 0 then s.state
--          when s.wait_time < 0 then case when s.command = 0 then 'WAITING' else 'On CPU ' end
--          when s.wait_time > 0 then case when s.status = 'INACTIVE' then 'WAITING' else 'On CPU ' end
--                                         --||to_char(s.seconds_in_wait-(s.wait_time/100),'fm90.00')
--     end  as state
,    case s.status
          when 'ACTIVE'
          then case s.state when 'WAITING'
                            then 'WAITING'
                            --else '<html><body bgcolor="green">CPU/RQ</body></html>'
                            else 'CPU/RQ'
               end
          else 'WAITING'
     end state
--,    s.state
--, s.wait_time, s.command--, s.seconds_in_wait
,    s.status
,    q.disk_reads  pio
,    q.buffer_gets lio
,    round(q.buffer_gets/nullif(q.executions,0))    "lio/ex"
,    q.parse_calls prs
,    q.executions  exe
--,    round(q.parse_calls/nullif(q.executions,0),1)  "prs/ex"
,    round(q.rows_processed/nullif(q.executions,0)) "rw/ex"
,    round(p.pga_alloc_mem/1024/1024) "pga"
--,    s.p3
--,    decode(s.sql_trace,'ENABLED','Y','') tr
,    q.rows_processed "rows"
,    case q.command_type
          when 2 then case when q.executions > 0 then round(q.rows_processed/q.executions)  end -- insert
          when 3 then case when q.fetches    > 1 then round(q.rows_processed/(q.fetches-1)) end -- select
          when 6 then case when q.executions > 0 then round(q.rows_processed/q.executions)  end -- update
          when 7 then case when q.executions > 0 then round(q.rows_processed/q.executions)  end -- delete
          else null
     end "array"
--,    ss.value  commits
--,    to_char(ss.value / (nullif(sysdate - s.logon_time,0)*86400) ,'fm9990') "tps"
,    to_char(q.rows_processed / (nullif(sysdate - s.sql_exec_start,0)*86400) ,'fm999999990') "rps"
--,    s.sid||nvl2(blocking_session,'/'||blocking_session,null)||nvl2(final_blocking_session,'/'||final_blocking_session,null) "Sid(/bl)"
,    s.sid||'/'||s.inst_id||nvl2(s.blocking_session,'('||s.blocking_session||'/'||s.blocking_instance||')',null) "Sid (bl)"
,    case when sl.opname is not null then sl.opname||': '||sl.time_remaining else ' ' end as opname
,    s.sql_id
,    s.sql_child_number childno
,    q.sql_text
,    nvl2(sql_exec_start,
      to_char(trunc(sysdate-sql_exec_start),'fm9990') ||'d '||
       to_char(trunc(mod((sysdate-sql_exec_start)*24, 24 ) ),'fm00') ||':'||
       to_char(trunc(mod((sysdate-sql_exec_start)*24*60, 60 ) ),'fm00')  ||':'||
       to_char(trunc(mod((sysdate-sql_exec_start)*24*60*60, 60 ) ),'fm00')
      , null) "Running"
,      to_char(floor(((q.elapsed_time/case when q.executions > 0 then q.executions else 1 end)/1000000)/3600),'fm9900')||':'||
        to_char(floor(mod(((q.elapsed_time/case when q.executions > 0 then q.executions else 1 end)/1000000),3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(((q.elapsed_time/case when q.executions > 0 then q.executions else 1 end)/1000000),3600),60)),'fm00') ||'.'||
        to_char(round(mod((q.elapsed_time/case when q.executions > 0 then q.executions else 1 end),1000000)/1000000,6)*1000000,'fm000000')  "Elapsed/exec"
,    q.sql_profile
,    q.sql_plan_baseline
,    q.hash_value
,    sl.target
,    s.p1
,    case p1text when 'name|mode' then chr(bitand(s.p1,-16777216)/16777215)  || chr(bitand(s.p1, 16711680)/65535) end bl_Type
,    mod(s.p1,16) bl_lmode
--,    decode(aa.name,'UNKNOWN','',lower(aa.name)) cmd
,    s.*
,    'alter system kill session '''||s.sid||','||s.serial#||''' immediate;'  as kill_session
,    'sys.dbms_system.set_ev('||s.sid||','||s.serial#||',10046,12,'''');' as trace_session
,    'exec dbms_monitor.session_trace_enable('||s.sid||','||s.serial#||',waits=>true, binds=>false);'  traceon
,    'exec dbms_monitor.session_trace_disable('||s.sid||','||s.serial#||');'                           traceoff
,    p.pid
,    p.spid "OS pid"
,    to_char((p.pga_used_mem /1024)/1024, '999G999G990D00') pga_used_mem
,    to_char((p.pga_alloc_mem /1024)/1024, '999G999G990D00') pga_alloc_mem
,    to_char((p.pga_max_mem /1024)/1024, '999G999G990D00') pga_max_mem
,    case when s.p2text = 'object #' then (select object_name from dba_objects where object_id = s.p2) end as object_name
,    case when s.row_wait_obj# > 0   then (select object_name from dba_objects where object_id = s.row_wait_obj#) end as object_name2
,    case when elapsed_time = 0 then 0 else trunc(rows_processed/(elapsed_time/1000000)) end "rows/sec"
from  gv$process         p
,     gv$session         s
,     gv$sql             q
,     slo               sl
--,     audit_actions     aa
--,     v$sesstat         ss
where q.sql_id(+)       = decode(s.sql_id,null,s.prev_sql_id,s.sql_id)
and   q.child_number(+) = decode(s.sql_id,null,s.prev_child_number,s.sql_child_number)
and   q.inst_id(+)      = s.inst_id
and   s.paddr           = p.addr(+)
and   s.inst_id         = p.inst_id(+)
and   sl.sid    (+)     = s.sid
and   sl.serial#(+)     = s.serial#
--and   sl.sql_id(+)      = decode(s.sql_id,null,s.prev_sql_id,s.sql_id)
and   sl.sql_exec_id(+) = s.sql_exec_id
and   sl.inst_id(+)     = s.inst_id
and   not (s.username = 'SYSTEM' and substr(s.program,-6) = '(PZ99)')
--and   s.command         = aa.action (+)
--and   ss.sid            = s.sid
--and   ss.statistic#     = 4 -- (select sn.statistic# from v$statname sn where sn.name = 'user commits')
--and osuser         = 'PMG9532'
--and s.username         in ('IVRBATP','SYSTEM','ADWILL2','MRM9523','RPT_MONITOR')
--and s.terminal         = 'IMADCMDMRMP4'
--and s.sid         in (874)
--and sw.event  not in ('SQL*Net message from client','rdbms ipc message') and s.username is not null
--and s.status       = 'ACTIVE'
--and s.username    = 'CISUSER'
--and s.inst_id = 2
--and s.aschemaname  != 'SYS'
--and client_info like '%PSQRYSRV%'
--and client_identifier like 'FMISRUN'
--and s.program     in ('LSReportMonitor.exe')
--and s.module       = '01@<l/xxldry/11.5.0/sql/XXLDRY_ALOHA_BEE_EXT.sql'
--and service_name   = 'SYS$BACKGROUND'
--and q.sql_text like 'UPDATE ORADBSS.OSDDSAUD%'
--and   q.parse_calls >= q.executions
--and s.sql_id = '88cyk4475htjz'
order by s.blocking_session
, case s.status when 'ACTIVE'
                then case s.state when 'WAITING'
                                  then 999999999
                                  else s.seconds_in_wait
                                  end
--                when 'KILLED'
--                then s.seconds_in_wait
                else 999999999
                end
,decode(s.username,null,99,0)
--,case substr(s.program,-6) when '(PZ98)'    then 1  else 0 end
,case substr(s.module,1,9) when 'Data Pump' then 0  else decode(s.type,'BACKGROUND',99,0) end
--, case s.username when 'SYS' then case s.state when 'WAITING' then 98 else 0 end else 99 end
, 6, s.status, decode(s.status,'ACTIVE',s.last_call_et,s.last_call_et*-1) desc, s.inst_id, s.username, s.sid
;]]></sql>
	</query>
		<pdf version="VERSION_1_7" compression="CONTENT">
			<docproperty title="null" author="null" subject="null" keywords="null" />
			<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
			<column>
				<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
				<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
				<blob blob="NONE" zip="false" />
			</column>
			<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
			<header enable="false" generatedate="false">
				<data>
				
				
				
				
				
				
				
				null																																</data>
			</header>
			<footer enable="false" generatedate="false">
				<data value="null" />
			</footer>
			<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
				<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
			</security>
			<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
		</pdf>
	<display id="null" type="" style="Table" enable="true">
		<name><![CDATA[sqlinfo]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
			<TYPE>horizontal</TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select s.sql_id
,      s.inst_id
,      s.child_number
,      s.plan_hash_value
,      s.first_load_time
,      s.parse_calls prs
,      s.executions  exe
,      round(s.buffer_gets/greatest(s.executions,1))   "lio/ex"
,      round(s.disk_reads/greatest(executions,1))      "pio/ex"
,      case when s.command_type in (2,3,6,7)
            then case when s.executions > 0 then round(s.rows_processed/s.executions) end
       end "rows/ex"
,      to_char(floor(((s.elapsed_time/case when s.executions > 0 then s.executions else 1 end)/1000000)/3600),'fm9900')||':'||
        to_char(floor(mod(((s.elapsed_time/case when s.executions > 0 then s.executions else 1 end)/1000000),3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(((s.elapsed_time/case when s.executions > 0 then s.executions else 1 end)/1000000),3600),60)),'fm00') ||'.'||
        to_char(round(mod((s.elapsed_time/case when s.executions > 0 then s.executions else 1 end),1000000)/1000000,5)*100000,'fm00000')  "Elapsed/exec"
,      case when s.executions > 0 then round(s.cpu_time/s.executions)   end/1000000 "cpu/ex"
,      case when s.executions > 0 then round(s.application_wait_time/s.executions)   end/1000000 "apw/ex"
,      case when s.executions > 0 then round(s.concurrency_wait_time/s.executions)   end/1000000 "concw/ex"
,      case when s.executions > 0 then round(s.cluster_wait_time/s.executions)   end/1000000 "clw/ex"
,      case when s.executions > 0 then round(s.user_io_wait_time/s.executions)   end/1000000 "useriow/ex"
,      case when s.executions > 0 then round(s.plsql_exec_time/s.executions)   end/1000000 "plsqlw/ex"
,      case when s.executions > 0 then round(s.java_exec_time/s.executions)   end/1000000 "javaw/ex"
,      rows_processed "Rows"
,      case when s.elapsed_time = 0 then 0 else trunc(s.rows_processed/(nullif(s.elapsed_time,0)/1000000)) end "rows/sec"
,      case when s.executions > 0 then round((s.cpu_time/nullif(s.elapsed_time,0))*100,2) end "%cpu"
,      case when s.executions > 0 then round((s.application_wait_time/nullif(s.elapsed_time,0))*100,2) end "%apw"
,      case when s.executions > 0 then round((s.concurrency_wait_time/nullif(s.elapsed_time,0))*100,2) end "%concw"
,      case when s.executions > 0 then round((s.cluster_wait_time/nullif(s.elapsed_time,0))*100,2) end "%clw"
,      case when s.executions > 0 then round((s.user_io_wait_time/nullif(s.elapsed_time,0))*100,2) end "%userio"
,      case when s.executions > 0 then round((s.plsql_exec_time/nullif(s.elapsed_time,0))*100,2) end "%plsql"
,      case when s.executions > 0 then round((s.java_exec_time/nullif(s.elapsed_time,0))*100,2) end "%java"
,      to_char(floor((s.elapsed_time/1000000)/3600),'fm9900')||':'||
        to_char(floor(mod((s.elapsed_time/1000000),3600)/60),'fm00')||':'||
        to_char(floor(mod(mod((s.elapsed_time/1000000),3600),60)),'fm00') ||'.'||
        to_char(round(mod(s.elapsed_time,1000000)/1000000,5)*100000,'fm00000')  "Elapsed hh:mi:ss"
,      s.*
--,      sc.bind_mismatch
--,      sc.use_feedback_stats
--,      sc.*
from gv$sql                s
,    gv$sql_shared_cursor  sc
where s.sql_id       = :SQL_ID
and   s.sql_id       = sc.sql_id
and   s.child_number = sc.child_number
and   s.inst_id      = sc.inst_id
order by s.inst_id, s.first_load_time desc, s.child_number]]></sql>
			<binds>
				<bind id="SQL_ID">
					<prompt><![CDATA[SQL_ID]]></prompt>
					<tooltip><![CDATA[SQL_ID]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					
					
					
					
					null																									</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
	<display id="null" type="" style="Table" enable="true">
		<name><![CDATA[awrinfo]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
			<TYPE>horizontal</TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select snap.snap_id
,      snap.end_interval_time
,      stat.instance_number        inst
,	     stat.plan_hash_value        phv
,      sum(stat.parse_calls_delta) prs
,      sum(stat.executions_delta)  exe
,      sum(stat.buffer_gets_delta) lio
,      sum(stat.disk_reads_delta) pio
--,      sum(stat.elapsed_time_total)/1000000 ela_tot1
--,      to_char(floor(sum(stat.elapsed_time_total)/1000000/3600),'fm9900')||':'||
--        to_char(floor(mod(sum(stat.elapsed_time_total)/1000000,3600)/60),'fm00')||':'||
--        to_char(floor(mod(mod(sum(stat.elapsed_time_total)/1000000,3600),60)),'fm00')||'.' ||
--        to_char(round(mod(sum(stat.elapsed_time_total),1000000)/1000000,6)*1000000,'fm000000') ela_tot
,      to_char(floor(sum(stat.elapsed_time_delta)/1000000/3600),'fm9900')||':'||
        to_char(floor(mod(sum(stat.elapsed_time_delta)/1000000,3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(sum(stat.elapsed_time_delta)/1000000,3600),60)),'fm00')||'.' ||
        to_char(round(mod(sum(stat.elapsed_time_delta),1000000)/1000000,6)*1000000,'fm000000') ela_delta
,      sum(case when stat.executions_delta > 0 then round(stat.buffer_gets_delta/stat.executions_delta)    end) "lio/ex"
,      sum(case when stat.executions_delta > 0 then round(stat.disk_reads_delta/stat.executions_delta)     end) "pio/ex"
,      round(( sum(stat.disk_reads_delta) / nullif(sum(stat.buffer_gets_delta),0) ) * 100,2) "%pio"
,      sum(case when stat.executions_delta > 0 then round(stat.rows_processed_delta/stat.executions_delta) end) "rows/ex"
,      sum(case when stat.executions_delta > 0 then round(stat.elapsed_time_delta/stat.executions_delta)   end)/1000000 "ela/ex"
,      sum(case when stat.executions_delta > 0 then round(stat.cpu_time_delta/stat.executions_delta)   end)/1000000 "cpu/ex"
,      sum(case when stat.executions_delta > 0 then round(stat.iowait_delta/stat.executions_delta)   end)/1000000 "iow/ex"
,      sum(case when stat.executions_delta > 0 then round(stat.clwait_delta/stat.executions_delta)   end)/1000000 "clw/ex"
,      sum(case when stat.executions_delta > 0 then round((stat.elapsed_time_delta-stat.clwait_delta)/stat.executions_delta)   end)/1000000 "ela-clus/ex"
,      round((sum(stat.cpu_time_delta) / nullif(sum(stat.elapsed_time_delta),0) ) * 100,2) "%cpu"
,      round((sum(stat.iowait_delta) / nullif(sum(stat.elapsed_time_delta),0) ) * 100,2) "%iowait"
,      round((sum(stat.clwait_delta) / nullif(sum(stat.elapsed_time_delta),0) ) * 100,2) "%clwait"
,      round((sum(stat.ccwait_delta) / nullif(sum(stat.elapsed_time_delta),0) ) * 100,2) "%ccwait"
,      round((sum(stat.apwait_delta) / nullif(sum(stat.elapsed_time_delta),0) ) * 100,2) "%apwait"
,      to_char(floor(sum(stat.cpu_time_delta)/1000000/3600),'fm9900')||':'||
        to_char(floor(mod(sum(stat.cpu_time_delta)/1000000,3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(sum(stat.cpu_time_delta)/1000000,3600),60)),'fm00')||'.' ||
        to_char(round(mod(sum(stat.cpu_time_delta),1000000)/1000000,6)*1000000,'fm000000') cpu_time_delta
,      to_char(floor(sum(stat.iowait_delta)/1000000/3600),'fm9900')||':'||
        to_char(floor(mod(sum(stat.iowait_delta)/1000000,3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(sum(stat.iowait_delta)/1000000,3600),60)),'fm00')||'.' ||
        to_char(round(mod(sum(stat.iowait_delta),1000000)/1000000,6)*1000000,'fm000000') iowait_delta
,      to_char(floor(sum(stat.clwait_delta)/1000000/3600),'fm9900')||':'||
        to_char(floor(mod(sum(stat.clwait_delta)/1000000,3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(sum(stat.clwait_delta)/1000000,3600),60)),'fm00')||'.' ||
        to_char(round(mod(sum(stat.clwait_delta),1000000)/1000000,6)*1000000,'fm000000') clusterwait_delta
,      to_char(floor(sum(stat.ccwait_delta)/1000000/3600),'fm9900')||':'||
        to_char(floor(mod(sum(stat.ccwait_delta)/1000000,3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(sum(stat.ccwait_delta)/1000000,3600),60)),'fm00')||'.' ||
        to_char(round(mod(sum(stat.ccwait_delta),1000000)/1000000,6)*1000000,'fm000000') ccwait_delta
,      to_char(floor(sum(stat.apwait_delta)/1000000/3600),'fm9900')||':'||
        to_char(floor(mod(sum(stat.apwait_delta)/1000000,3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(sum(stat.apwait_delta)/1000000,3600),60)),'fm00')||'.' ||
        to_char(round(mod(sum(stat.apwait_delta),1000000)/1000000,6)*1000000,'fm000000') apwait_delta
,      sum(stat.rows_processed_delta)     sum_rows_proc
,      sum(stat.fetches_delta)            sum_fetches
,      sum(case when stat.executions_delta > 0 then round(stat.fetches_delta/stat.executions_delta)   end) "ftch/ex"
,      min(stat.force_matching_signature) force_matching_signature
,      min(stat.sql_id) sql_id
from   dba_hist_sqlstat  stat
,      dba_hist_snapshot snap
where  stat.sql_id = :SQL_ID
--and    plan_hash_value != 3953216635
and    snap.snap_id         = stat.snap_id
and    snap.dbid            = stat.dbid
and    snap.instance_number = stat.instance_number
and    snap.dbid            = (select dbid from v$database)
group by snap.snap_id, snap.end_interval_time, stat.instance_number, stat.plan_hash_value
--having sum(stat.parse_calls_delta) > 0
having sum(stat.executions_delta) > 0
order by snap.snap_id desc, stat.instance_number]]></sql>
			<binds>
				<bind id="SQL_ID">
					<prompt><![CDATA[SQL_ID]]></prompt>
					<tooltip><![CDATA[SQL_ID]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					
					
					
					
					null																									</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
	<display id="null" type="" style="Table" enable="true">
		<name><![CDATA[xplan]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
			<TYPE>horizontal</TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select * from table(dbms_xplan.display_cursor(:SQL_ID,:CHILDNO,'ALLSTATS LAST REMOTE PEEKED_BINDS'))]]></sql>
			<binds>
				<bind id="SQL_ID">
					<prompt><![CDATA[SQL_ID]]></prompt>
					<tooltip><![CDATA[SQL_ID]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="CHILDNO">
					<prompt><![CDATA[CHILDNO]]></prompt>
					<tooltip><![CDATA[CHILDNO]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					
					
					
					
					null																									</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
	<display id="null" type="" style="Code" enable="true">
		<name><![CDATA[monitor]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
		</CustomValues>
		<query>
			<sql><![CDATA[select dbms_sqltune.report_sql_monitor(sql_id=>:SQL_ID,report_level=>'TYPICAL', type=>'TEXT') sqlmon from dual]]></sql>
			<binds>
				<bind id="SQL_ID">
					<prompt><![CDATA[SQL_ID]]></prompt>
					<tooltip><![CDATA[SQL_ID]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					
					
					
					
					null																									</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
	<display id="null" type="" style="Table" enable="true">
		<name><![CDATA[binds]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
			<TYPE>horizontal</TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select sql_id, child_number, child_address, 'var  ' || substr(name,2) || ' '    || datatype_string || ';' var
,      'exec ' || name || ' := '
               || nvl2(value_string, case substr(datatype_string,1,8) when 'VARCHAR2' then '''' when 'DATE' then '''' else null end, null)
               || nvl(value_string,'null')
               || nvl2(value_string, case substr(datatype_string,1,8) when 'VARCHAR2' then '''' when 'DATE' then '''' else null end, null)
               || ';' val
from gv$sql_bind_capture
where sql_id = :SQL_ID
order by child_number,child_address,position;]]></sql>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					
					
					
					
					null																									</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
	<display id="null" type="" style="Table" enable="true">
		<name><![CDATA[optimizer_env]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
			<TYPE>horizontal</TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select * from gv$sql_optimizer_env where sql_id = :SQL_ID and child_number= :CHILDNO order by name, child_number]]></sql>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					
					
					
					
					null																									</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
	<display id="null" type="" style="Code" enable="true">
		<name><![CDATA[sqltext]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
		</CustomValues>
		<query>
			<sql><![CDATA[select SQL_FULLTEXT 
from gv$sql 
where sql_id = :SQL_ID]]></sql>
			<binds>
				<bind id="SQL_ID">
					<prompt><![CDATA[SQL_ID]]></prompt>
					<tooltip><![CDATA[SQL_ID]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					
					
					
					
					null																									</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
	<display id="null" type="" style="Table" enable="true">
		<name><![CDATA[open_cursor]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
			<TYPE>horizontal</TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select oc.sid
,      oc.inst_id
,      oc.sql_id
,      s.plan_hash_value
,      s.disk_reads  pio
,      s.buffer_gets lio
,      s.parse_calls prs
,      s.executions  exe
,      round(s.buffer_gets/greatest(s.executions,1))    "lio/ex"
,      case when s.command_type = 3
          then case when s.fetches > 0    then round(s.rows_processed/s.fetches) end
          else case when s.executions > 0 then round(s.rows_processed/s.executions) end
       end "array"
,      s.rows_processed  "rows"
,      to_char(floor((s.elapsed_time/1000000)/3600),'fm9900')||':'||
        to_char(floor(mod((s.elapsed_time/1000000),3600)/60),'fm00')||':'||
        to_char(trunc(mod(mod((s.elapsed_time/1000000),3600),60),2),'fm00.00')  "elapsed"
,      to_char(floor(((s.elapsed_time/case when s.executions > 0 then s.executions else 1 end)/1000000)/3600),'fm9900')||':'||
        to_char(floor(mod(((s.elapsed_time/case when s.executions > 0 then s.executions else 1 end)/1000000),3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(((s.elapsed_time/case when s.executions > 0 then s.executions else 1 end)/1000000),3600),60)),'fm00') ||'.'||
        to_char(round(mod((s.elapsed_time/case when s.executions > 0 then s.executions else 1 end),1000000)/1000000,5)*100000,'fm00000')  "Elapsed/exec"
,      s.sql_text
,      to_char(floor((s.cpu_time/1000000)/3600),'fm9900')||':'||
        to_char(floor(mod((s.cpu_time/1000000),3600)/60),'fm00')||':'||
        to_char(trunc(mod(mod((s.cpu_time/1000000),3600),60),2),'fm00.00') "cpu"
,      case when s.executions > 0 then round(s.elapsed_time/s.executions)   end/1000000 "ela/ex"
,      case when s.executions > 0 then round(s.cpu_time/s.executions)   end/1000000 "cpu/ex"
,      case when s.executions > 0 then round(s.application_wait_time/s.executions)   end/1000000 "apw/ex"
,      case when s.executions > 0 then round(s.concurrency_wait_time/s.executions)   end/1000000 "concw/ex"
,      case when s.executions > 0 then round(s.cluster_wait_time/s.executions)   end/1000000 "clw/ex"
,      case when s.executions > 0 then round(s.user_io_wait_time/s.executions)   end/1000000 "useriow/ex"
,      case when s.executions > 0 then round(s.plsql_exec_time/s.executions)   end/1000000 "plsqlw/ex"
,      case when s.executions > 0 then round(s.java_exec_time/s.executions)   end/1000000 "javaw/ex"
,      case when s.command_type in (2,3,6,7)
            then case when s.executions > 0 then round(s.rows_processed/s.executions) end
       end "rows/ex"
,      s.first_load_time
from   (select distinct sid, inst_id, sql_id from gv$open_cursor where sid = :SID and inst_id = :INST_ID) oc
,      gv$sql         s
where oc.sql_id  = s.sql_id
and   oc.inst_id = s.inst_id
order by s.inst_id, s.elapsed_time desc]]></sql>
			<binds>
				<bind id="SID">
					<prompt><![CDATA[SID]]></prompt>
					<tooltip><![CDATA[SID]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="INST_ID">
					<prompt><![CDATA[INST_ID]]></prompt>
					<tooltip><![CDATA[INST_ID]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					
					
					
					null																				</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
	<display id="null" type="" style="Table" enable="true">
		<name><![CDATA[blocker]]></name>
		<description><![CDATA[]]></description>
		<tooltip><![CDATA[]]></tooltip>
		<drillclass><![CDATA[null]]></drillclass>
		<CustomValues>
			<TYPE>horizontal</TYPE>
		</CustomValues>
		<query>
			<sql><![CDATA[select /* rule */
     to_char(floor(s.last_call_et/3600/24),'fm9999')||'d:'||
      to_char(floor(mod(s.last_call_et,86400)/3600),'fm00')||':'||
       to_char(floor(mod(s.last_call_et,3600)/60),'fm00')||':'||
       to_char(mod(mod(s.last_call_et,3600),60),'fm00') "Idle"
,    to_char(floor(s.seconds_in_wait/3600),'fm9000')||':'||
       to_char(floor(mod(s.seconds_in_wait,3600)/60),'fm00')||':'||
       to_char(mod(mod(s.seconds_in_wait,3600),60),'fm00') "Wait"
--,    rpad(substr(s.username,1,21),21) "User"
,    s.username
,    substr(case when substr(s.program,-1) = ')'
            then
               case when substr(s.program,-6,1) = '('
                    then substr(s.program,-6) ||' '||s.module
                    else substr(s.program,1, instr(s.program,'(',-1)-1) --substr(s.program,1,7)
               end
            else nvl(substr(s.program,instr(s.program,'/',-1)+1), substr(s.module,instr(s.module,'/',-1)+1,15)  )
            end
           ,1,16) "program/mod"
,    case s.state when 'WAITING' then substr(s.event,1,31)
                else case s.status when 'INACTIVE' then substr(s.event,1,31)
                                                   else 'on cpu/runqueue'
                end
     end event
--,    s.event event2
--,    case
--          when s.wait_time = 0 then s.state
--          when s.wait_time < 0 then case when s.command = 0 then 'WAITING' else 'On CPU ' end
--          when s.wait_time > 0 then case when s.status = 'INACTIVE' then 'WAITING' else 'On CPU ' end
--                                         --||to_char(s.seconds_in_wait-(s.wait_time/100),'fm90.00')
--     end  as state
,    case s.status
          when 'ACTIVE'
          then case s.state when 'WAITING'
                            then 'WAITING'
                            --else '<html><body bgcolor="green">CPU/RQ</body></html>'
                            else 'CPU/RQ'
               end
          else 'WAITING'
     end state
--,    s.state
--, s.wait_time, s.command--, s.seconds_in_wait
,    s.status
,    q.disk_reads  pio
,    q.buffer_gets lio
,    round(q.buffer_gets/nullif(q.executions,0))    "lio/ex"
,    q.parse_calls prs
,    q.executions  exe
--,    round(q.parse_calls/nullif(q.executions,0),1)  "prs/ex"
,    round(q.rows_processed/nullif(q.executions,0)) "rw/ex"
,    round(p.pga_alloc_mem/1024/1024) "pga"
--,    s.p3
--,    decode(s.sql_trace,'ENABLED','Y','') tr
,    q.rows_processed "rows"
,    case q.command_type
          when 2 then case when q.executions > 0 then round(q.rows_processed/q.executions)  end -- insert
          when 3 then case when q.fetches    > 1 then round(q.rows_processed/(q.fetches-1)) end -- select
          when 6 then case when q.executions > 0 then round(q.rows_processed/q.executions)  end -- update
          when 7 then case when q.executions > 0 then round(q.rows_processed/q.executions)  end -- delete
          else null
     end "array"
--,    ss.value  commits
--,    to_char(ss.value / (nullif(sysdate - s.logon_time,0)*86400) ,'fm9990') "tps"
,    to_char(q.rows_processed / (nullif(sysdate - s.sql_exec_start,0)*86400) ,'fm999999990') "rps"
--,    s.sid||nvl2(blocking_session,'/'||blocking_session,null)||nvl2(final_blocking_session,'/'||final_blocking_session,null) "Sid(/bl)"
,    s.sid||'/'||s.inst_id||nvl2(s.blocking_session,'('||s.blocking_session||'/'||s.blocking_instance||')',null) "Sid (bl)"
,    s.sql_id
,    s.sql_child_number childno
,    q.sql_text
,    nvl2(sql_exec_start,
      to_char(trunc(sysdate-sql_exec_start),'fm9990') ||'d '||
       to_char(trunc(mod((sysdate-sql_exec_start)*24, 24 ) ),'fm00') ||':'||
       to_char(trunc(mod((sysdate-sql_exec_start)*24*60, 60 ) ),'fm00')  ||':'||
       to_char(trunc(mod((sysdate-sql_exec_start)*24*60*60, 60 ) ),'fm00')
      , null) "Running"
,      to_char(floor(((q.elapsed_time/case when q.executions > 0 then q.executions else 1 end)/1000000)/3600),'fm9900')||':'||
        to_char(floor(mod(((q.elapsed_time/case when q.executions > 0 then q.executions else 1 end)/1000000),3600)/60),'fm00')||':'||
        to_char(floor(mod(mod(((q.elapsed_time/case when q.executions > 0 then q.executions else 1 end)/1000000),3600),60)),'fm00') ||'.'||
        to_char(round(mod((q.elapsed_time/case when q.executions > 0 then q.executions else 1 end),1000000)/1000000,6)*1000000,'fm000000')  "Elapsed/exec"
,    q.sql_profile
,    q.sql_plan_baseline
,    q.hash_value
,    s.p1
,    case p1text when 'name|mode' then chr(bitand(s.p1,-16777216)/16777215)  || chr(bitand(s.p1, 16711680)/65535) end bl_Type
,    mod(s.p1,16) bl_lmode
,    'alter system kill session '''||s.sid||','||s.serial#||''' immediate;'  as kill_session
,    'sys.dbms_system.set_ev('||s.sid||','||s.serial#||',10046,12,'''');' as trace_session
,    'exec dbms_monitor.session_trace_enable('||s.sid||','||s.serial#||',waits=>true, binds=>false);'  traceon
,    'exec dbms_monitor.session_trace_disable('||s.sid||','||s.serial#||');'                           traceoff
,    p.pid
,    p.spid "OS pid"
,    to_char((p.pga_used_mem /1024)/1024, '999G999G990D00') pga_used_mem
,    to_char((p.pga_alloc_mem /1024)/1024, '999G999G990D00') pga_alloc_mem
,    to_char((p.pga_max_mem /1024)/1024, '999G999G990D00') pga_max_mem
,    case when s.p2text = 'object #' then (select object_name from dba_objects where object_id = s.p2) end as object_name
,    case when s.row_wait_obj# > 0   then (select object_name from dba_objects where object_id = s.row_wait_obj#) end as object_name2
,    case when elapsed_time = 0 then 0 else trunc(rows_processed/(elapsed_time/1000000)) end "rows/sec"
from  gv$process         p
,     gv$session         s
,     gv$sql             q
--,     audit_actions     aa
--,     v$sesstat         ss
where q.sql_id(+)       = decode(s.sql_id,null,s.prev_sql_id,s.sql_id)
and   q.child_number(+) = decode(s.sql_id,null,s.prev_child_number,s.sql_child_number)
and   q.inst_id(+)      = s.inst_id
and   s.paddr           = p.addr(+)
and   s.inst_id         = p.inst_id(+)
and   s.sid             = :BLOCKING_SESSION
and   s.inst_id         = :BLOCKING_INSTANCE
;]]></sql>
			<binds>
				<bind id="BLOCKING_SESSION">
					<prompt><![CDATA[BLOCKING_SESSION]]></prompt>
					<tooltip><![CDATA[BLOCKING_SESSION]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
				<bind id="BLOCKING_INSTANCE">
					<prompt><![CDATA[BLOCKING_INSTANCE]]></prompt>
					<tooltip><![CDATA[BLOCKING_INSTANCE]]></tooltip>
					<value><![CDATA[NULL_VALUE]]></value>
					<bracket><![CDATA[null]]></bracket>
				</bind>
			</binds>
		</query>
			<pdf version="VERSION_1_7" compression="CONTENT">
				<docproperty title="null" author="null" subject="null" keywords="null" />
				<cell toppadding="2" bottompadding="2" leftpadding="2" rightpadding="2" horizontalalign="LEFT" verticalalign="TOP" wrap="true" />
				<column>
					<heading font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="FIRST_PAGE" />
					<footing font="null" size="10" style="NORMAL" color="-16777216" rowshading="-1" labeling="NONE" />
					<blob blob="NONE" zip="false" />
				</column>
				<table font="null" size="10" style="NORMAL" color="-16777216" userowshading="false" oddrowshading="-1" evenrowshading="-1" showborders="true" spacingbefore="12" spacingafter="12" horizontalalign="LEFT" />
				<header enable="false" generatedate="false">
					<data>
					null					</data>
				</header>
				<footer enable="false" generatedate="false">
					<data value="null" />
				</footer>
				<security enable="false" useopenpassword="false" openpassword="null" encryption="EXCLUDE_METADATA">
					<permission enable="false" permissionpassword="null" allowcopying="true" allowprinting="true" allowupdating="false" allowaccessdevices="false" />
				</security>
				<pagesetup papersize="LETTER" orientation="1" measurement="in" margintop="1.0" marginbottom="1.0" marginleft="1.0" marginright="1.0" />
			</pdf>
	</display>
<item  reload="false"  reloadparent="false" removeFromParent="false" className="oracle.dbtools.raptor.report.addin.DrillReportAction" classArgs="a7d6fab8-0114-1000-8204-c0a8010a29c4" toolbar="false" ><title>Version</title></item></display>
</displays>